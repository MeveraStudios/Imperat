import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url "https://libraries.minecraft.net"
    }
}
dependencies {

    compileOnly lombok()
    annotationProcessor lombok()

    implementation project(":core")
    implementation project(":brigadier")
    implementation 'dev.array21:bukkit-reflection-util:1.3.1'

    compileOnly("com.mojang:brigadier:1.0.18")
    compileOnly 'org.spigotmc:spigot:1.13.2-R0.1-SNAPSHOT'

    compileOnly("io.papermc.paper:paper-api:1.19.1-R0.1-SNAPSHOT")
    compileOnly("io.papermc.paper:paper-mojangapi:1.19.1-R0.1-SNAPSHOT")


    compileOnly kyori(KyoriModule.API)
    compileOnly kyori(KyoriModule.MINI_MESSAGE)
    compileOnly kyoriPlatform(KyoriModule.BUKKIT, "4.3.3")

    // The full Spigot server with no shadowing. Requires mavenLocal.
    testImplementation project(":core")
    testCompileOnly lombok()
    testAnnotationProcessor lombok()

    testImplementation kyori(KyoriModule.API)
    testImplementation kyori(KyoriModule.MINI_MESSAGE)
    testImplementation kyoriPlatform(KyoriModule.BUKKIT, "4.3.3")
    testCompileOnly('org.spigotmc:spigot:1.8.8-R0.1-SNAPSHOT')
    testCompileOnly("com.mojang:brigadier:1.0.18")
    testImplementation project(":brigadier")

}


processTestResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

shadowJar {
    setArchiveFileName("Imperat-bukkit.jar")
    relocate("dev.array21.bukkitreflectionlib", "dev.velix.imperat.util.reflection")
}


compileJava {
    options.compilerArgs += ["-parameters"]
}

tasks.register('bukkit', ShadowJar) {
    archiveClassifier.set("tests")
    from sourceSets.main.output, sourceSets.test.output
    configurations = [project.configurations.testRuntimeClasspath]
    setDestinationDirectory(file("C:\\Users\\Bergo\\OneDrive\\Desktop\\servers\\spigot 1.19.2\\plugins"))
    relocate("dev.array21.bukkitreflectionlib", "dev.velix.imperat.util.reflection")
}


static String lombok() {
    return 'org.projectlombok:lombok:1.18.34'
}


static String kyori(KyoriModule module) {
    return kyoriPlatform(module, "4.17.0")
}

static String kyoriPlatform(KyoriModule platform, String version) {
    "net.kyori:adventure-" + platform.getDisplay() + ":" + version
}

enum KyoriModule {

    API("api"), MINI_MESSAGE("text-minimessage"), BUKKIT("platform-bukkit"),
    BUNGEE("platform-bungeecord"), SPONGE("platform-spongeapi");

    private final String display

    KyoriModule(String display) {
        this.display = display
    }

    String getDisplay() {
        return display
    }
}
