name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: ✅ Checkout Project
        uses: actions/checkout@v4

      - name: 📐 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17

      - name: 📐 Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 🧪 Gradle Test
        run: |
          chmod +x ./gradlew
          ./gradlew test --info

      - name: 📝 Summarize Failed Tests
        if: failure()
        run: |
          echo "## ❌ Failed Tests Summary" >> $GITHUB_STEP_SUMMARY
          # Check if any test result XML files exist
          if ! find . -path "*/build/test-results/test/*.xml" | grep -q .; then
            echo "No test results found. Build likely failed before tests ran." >> $GITHUB_STEP_SUMMARY
            exit 0
          fi

          # Process XML files if they exist
          find . -type f -path "*/build/test-results/test/*.xml" | while read file; do
            module=$(echo "$file" | cut -d/ -f2)
            fails=$(grep -c "<failure" "$file")
            if [ "$fails" -gt 0 ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**$module:**" >> $GITHUB_STEP_SUMMARY
              grep -A 1 "<testcase" "$file" | grep -B 1 "<failure" | grep -E "<testcase|<failure" | while read line; do
                if [[ "$line" == *"<testcase"* ]]; then
                  classname=$(echo "$line" | sed -n 's/.*classname="\([^"]*\)".*/\1/p')
                  name=$(echo "$line" | sed -n 's/.*name="\([^"]*\)".*/\1/p')
                  echo "- ${classname##*.}.${name}" >> $GITHUB_STEP_SUMMARY
                elif [[ "$line" == *"<failure"* ]]; then
                  message=$(echo "$line" | sed -n 's/.*<failure[^>]*message="\([^"]*\)".*/\1/p')
                  if [ -z "$message" ]; then
                    message="(no message)"
                  fi
                  echo "  → $message" >> $GITHUB_STEP_SUMMARY
                fi
              done
            fi
          done

      - name: 📦 Archive all test reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: '**/build/reports/tests/test'
